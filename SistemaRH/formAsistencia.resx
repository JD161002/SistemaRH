<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ivw/hKL8HxvNUtmou8shAAAAAElFTkSuQmCC
</value>
  </data>
</root>